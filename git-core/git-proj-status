#!/bin/bash

export gpCmdName gpBin gpShort

#--------------------
fUsage()
{
    exit 1
    cat <<\EOF >/dev/null
=pod

=for text ========================================

=for html <hr/>

=head1 NAME git proj status

=head1 SYNOPSIS

 git proj status [-s] [common-options]

=head1 DESCRIPTION

    Do a "git status"
    Verify gitproj.config.remote-raw-origin is defined and mounted
    Verify origin is set to a path that exists (if mounted)
    Give a "diff" (-qr) of the raw files, local vs remote (if mounted)

Check install related health

    fComGetVer
    Compare .git/hooks/pre-commit to $gpDoc/hooks/pre-commit
    if -v, show all the proj related config settings.

=cut

EOF
}

# ========================================
# Main

export gpBin gpCmdName tSrc

gpCmdName=${BASH_SOURCE##*/}
tSrc=${BASH_SOURCE##*/}

# -------------------
# Set current directory location in PWD
if [ -z "$PWD" ]; then
    PWD=$(pwd)
fi

# -------------------
# Define the location of this script
gpBin=${0%/*}
if [ "$gpBin" = "." ]; then
    gpBin=$PWD
fi
cd $gpBin >/dev/null 2>&1
gpBin=$PWD
cd - >/dev/null 2>&1

# -------------------
. $gpBin/gitproj-com.inc
# Calls: fComSetGlobals

. $gpBin/gitproj-status.inc
# Calls: fComGetProjGlobals

tSrc=${BASH_SOURCE##*/}
gpShort=""
while getopts :shH:qvV:xX: tArg; do
    case $tArg in
        s) gpShort="-s" ;;
        # Script arguments
        # Common arguments
        h) fUsage long ;;
        H) fUsage "$OPTARG" ;;
        q) gpVerbose=0 ;;
        v) gpVerbose=2 ;;
        V) gpVerbose=$OPTARG ;;
        x) let ++gpDebug ;;
        X) gpDebug=$OPTARG ;;
        # Problem arguments
        :) fError -m "Value required for option: -$OPTARG" -l $tSrc:$LINENO ;;
        \?) fError -m "Unknown option: $OPTARG" -l $tSrc:$LINENO ;;
    esac
done
shift $((OPTIND - 1))
if [ $# -ne 0 ]; then
    fError -m "Unknown option: $*" -l $tSrc:$LINENO
fi

# ----------
fStatusOutput $gpShort
exit 0
