#!/bin/bash

#--------------------
fUsage()
{
    exit 1
    cat <<\EOF >/dev/null
=pod

=for text ========================================

=for html <hr/>

 git proj config [-e pExternalPath] [-r pRawPath]

    Define or redefine the gitproj options.
    
    -e pExternalPath
    
       If the external repo is mounted at a different path than the
       original "origin", then use this command to set the origin to
       the new mount point.

    -r pRawPath

       Redefine the location of the local raw file dir. The "raw"
       symlink will be updated.

    -c on/off
    
       Set a commit hook to not allow commits for "large" binary files.

    -s pMaxSize
    
       Set the max size for commits of binary files.

Usage:
	proj-set-remote pPath
	
Description
	Use this script if the mount path is different from the origin
	remote. pPath is the path pointing the current repo's remote
	repo on an external drive.

Example
	The origin is currently set to: /mnt/usb-video/video-2019-04-01/trip.git
	But the drive is now mounted at /mnt/usb-drive, use:

	    proj-set-remote /mnt/usb-drive/video-2019-04-01

	will set the origin to: /mnt/usb-drive/video-2019-04-01/trip.git
	if trip.git is found at the specified path.

=cut

EOF
    exit 1
}

# --------------------
fCheckForGit()
{
    if [ ! -d .git ]; then
        echo 'Error: .git not found in current directory.'
        exit 1
    fi
}

fFindRemote()
{
    local pPath=$1

    local tOrigin=$($cGetOrigin)
    local tRemoteGit=${tOrigin##*/}
    local tNewPath=$pPath/$tRemoteGit

    if [ ! -d $tNewPath ]; then
        echo "Error: Could not find: $tNewPath"
        exit 1
    fi
    echo $tNewPath
}

# ====================
# Main

if [ $# -ne 1 ]; then
    fUsage
fi

gpPath=$1

fCheckForGit
tNewPath=$(fFindRemote $gpPath)

set -x
git remote set-url origin $tNewPath
set +x

exit 0
