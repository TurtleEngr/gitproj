=pod

=head1 GNU Rush Configuration

I want the package Action to save test packages to my server. Usually
I'll use ssh-agent to setup ssh keys for pushing files, then use scp or
rsync. But setting up ssh-agent on a github action server would be
really tricky, and require "secrets". So I chose to use a passwordless
ssh key that is is only in one user's authoried_keys file, and that
user can only use the scp command, and the command will only work with
specific paths. "GNU rush" satisfies these requirements.

Once setup, scp can also replace "wget" for getting the tgz tar files.
That will be more direct and probably faster.

=head2 Server Setup

=over 4

=item * Create user "hamp"

    adduser --shell=/usr/sbin/rush hamp

=item * Add hamp to "AllowUsers" in /etc/ssh/sshd_config

=item * Add hamp to "users" group in /etc/group

=item * Setup /home/hamp/.ssh with the passwordless ssh key.

    sudo -s
    mkdir /home/hamp/.ssh
    cd /home/hamp/.ssh
    ssh-keygen -t rsa -f id.hamp
    cat id.hamp.pub >authorized_keys
    chmod -R go= .
    chown -R hamp:hamp .

=item * This is the /etc/rush.rc configuration file:

    # Set verbosity level.
    debug 1

    # Default settings
    rule default
      acct on
      limits t5
      umask 002
      env - USER LOGNAME HOME PATH
      fall-through

    # Scp requests: limited

    rule scp-to
      command ^scp (-v )?-t( --)? /software/(own|ThirdParty)/?
      # User: hamp
      uid = 1002
      set[0] /usr/bin/scp
      match[$] ! /\.\.
      match[$] ! ^~/.*
      transform[$] s,^/software/,/rel/development/software/,

    rule scp-from
      command ^scp (-v )?-f( --)? /software/(own|ThirdParty)/?
      uid = 1002
      set[0] /usr/bin/scp
      match[$] ! /\.\.
      match[$] ! ^~/.*
      transform[$] s,^/software/,/rel/development/software/,

    fall-through

    rule gen
      exit You messed up!

=back

=head2 In this git repo

=over 4

=item * Create a place for id.hamp key and ssh config at: test/ssh/

=item * test/ssh/config file

    Host moria.whyayh.com
	CheckHostIP no
	Compression yes
	ForwardAgent no
	ForwardX11 no
	IdentitiesOnly=yes
	IdentityFile ~/.ssh/id.hamp
	NoHostAuthenticationForLocalhost no
	Protocol 2,1
	ServerAliveInterval 60
        StrictHostKeyChecking no
	User hamp

=item * Create a Makefile target "mk-ssh" for creating the ~/.ssh dir

    -mkdir ~/.ssh
    cp -f ssh/id.hamp  ~/.ssh
    touch ~/.ssh/config; \
    if ! grep 'Host moria.whyayh.com' ~/.ssh/config; then \
        cat ssh/config >>~/.ssh/config; \
    fi
    chmod -R go= ~/.ssh

=back

=head2 Example Use

=over 4

=item * Example commands

    spc -i ~/.ssh/id.hamp test.txt hamp@moria.whyayh.com:/software/own/foo.txt
    spc -i ~/.ssh/id.hamp hamp@moria.whyayh.com:/software/own/foo.txt .
    spc -i ~/.ssh/id.hamp test.txt hamp@moria.whyayh.com:/software/ThirdParty

=item * These commands will fail:

    spc -i ~/.ssh/id.hamp test.txt hamp@moria.whyayh.com:/software
    rsync test.txt hamp@moria.whyayh.com:/software/own

=back

=cut
